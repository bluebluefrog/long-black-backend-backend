<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.knowonespace.longblack.model.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.knowonespace.longblack.model.pojo.Member">
    <id column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
  </resultMap>
  <sql id="Base_Column_List">
    member_id, username, `password`, create_time, nickname, signature
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.knowonespace.longblack.model.pojo.Member">
    insert into member (member_id, username, `password`, 
      create_time, nickname, signature
      )
    values (#{memberId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{nickname,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.knowonespace.longblack.model.pojo.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="signature != null">
        signature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.knowonespace.longblack.model.pojo.Member">
    update member
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.knowonespace.longblack.model.pojo.Member">
    update member
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      nickname = #{nickname,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
</mapper>